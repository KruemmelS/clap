version: '3.8'

services:
  # MySQL Database
  clap-db:
    image: mysql:8.0
    container_name: clap-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-clap_db}
      MYSQL_USER: ${MYSQL_USER:-clap}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-clap123}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass123}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - clap-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-rootpass123}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: clap-phpmyadmin
    restart: unless-stopped
    depends_on:
      clap-db:
        condition: service_healthy
    environment:
      PMA_HOST: clap-db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass123}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass123}
    ports:
      - "8082:80"
    networks:
      - clap-network

  # Spring Boot Backend - pulls from GitHub Container Registry
  clap-backend:
    image: ghcr.io/kruemmels/clap-backend:latest
    container_name: clap-backend
    restart: unless-stopped
    depends_on:
      clap-db:
        condition: service_healthy
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:mysql://clap-db:3306/${MYSQL_DATABASE:-clap_db}?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-clap}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-clap123}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver

      # Database Configuration for application.properties
      DB_USERNAME: ${DB_USERNAME:-clap}
      DB_PASSWORD: ${DB_PASSWORD:-clap123}

      # JPA/Hibernate Configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "false"
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL8Dialect

      # Security Configuration
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production-min-32-chars}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}

      # CORS Configuration
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-https://kruemmels.ddns.net}
      APP_CORS_ALLOWED_ORIGINS: ${APP_CORS_ALLOWED_ORIGINS:-https://kruemmels.ddns.net}

      # OAuth2 Configuration
      OAUTH2_REDIRECT_URI: ${OAUTH2_REDIRECT_URI:-https://kruemmels.ddns.net/auth/callback}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI:-https://kruemmels.ddns.net/login/oauth2/code/google}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-default_client_id}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-default_client_secret}

      # File Storage Configuration
      NEXTCLOUD_URL: ${NEXTCLOUD_URL:-http://192.168.50.224:8080}
      NEXTCLOUD_USERNAME: ${NEXTCLOUD_USERNAME:-admin}
      NEXTCLOUD_PASSWORD: ${NEXTCLOUD_PASSWORD:-admin}

      # Server Configuration
      SERVER_PORT: 8080

      # Mail Configuration
      MAIL_HOST: ${MAIL_HOST:-smtp.gmail.com}
      MAIL_PORT: ${MAIL_PORT:-587}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      APP_BASE_URL: https://kruemmels.ddns.net
      SPRING_MAIL_HOST: ${MAIL_HOST:-smtp.gmail.com}
      SPRING_MAIL_PORT: ${MAIL_PORT:-587}
      SPRING_MAIL_USERNAME: ${MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${MAIL_PASSWORD}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"

    volumes:
      - backend_logs:/app/logs
    networks:
      - clap-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend - pulls from GitHub Container Registry
  clap-frontend:
    image: ghcr.io/kruemmels/clap-frontend:latest
    container_name: clap-frontend
    restart: unless-stopped
    depends_on:
      clap-backend:
        condition: service_healthy
    networks:
      - clap-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: clap-nginx
    restart: unless-stopped
    depends_on:
      - clap-frontend
      - clap-backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
      - ./nginx/letsencrypt:/etc/letsencrypt
      - ./nginx/www:/var/www/certbot
    networks:
      - clap-network

volumes:
  mysql_data:
    driver: local
  backend_logs:
    driver: local

networks:
  clap-network:
    driver: bridge